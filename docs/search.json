[{"path":"index.html","id":"welcome","chapter":"Welcome","heading":"Welcome","text":"hope message finds well.online bookdown file, plan update regularly class material. suggest write code simultaneously us seminar, bugs can always occur blue… missed something just want revisit topic additional comments (probably exam day) page help.end course know:data types, data quality, data preprocessing?data types, data quality, data preprocessing?components tidyverse advantage?components tidyverse advantage?density, distribution function, quantile functions?density, distribution function, quantile functions?data clustering techniques?data clustering techniques?main techniques association analysis?main techniques association analysis?work R, one loved statistical programming language. afraid programming experience, beginner course. However, end program, hope find useful concept practical tips offer, able solve real life data analysis issues.","code":""},{"path":"syllabus.html","id":"syllabus","chapter":"Syllabus","heading":"Syllabus","text":"","code":""},{"path":"syllabus.html","id":"topics","chapter":"Syllabus","heading":"0.1 Topics","text":"Basic R knowledge (Week 1)\nData categorize, sampling, importing-exporting\nTypes, tables, selection, objects, functions\nBasic R knowledge (Week 1)Data categorize, sampling, importing-exportingData categorize, sampling, importing-exportingTypes, tables, selection, objects, functionsTypes, tables, selection, objects, functionsData manipulation Tidyverse (Week 2)\nFilter, group_by, arrange, summarize commands\n%\\>%\nJoin (mutating, filtering)\ntidy data (longer, wider)\nData manipulation Tidyverse (Week 2)Filter, group_by, arrange, summarize commandsFilter, group_by, arrange, summarize commands%\\>%%\\>%Join (mutating, filtering)Join (mutating, filtering)tidy data (longer, wider)tidy data (longer, wider)Visualization ggplot2 (Week 3)\nLayers, facets, geoms\nDescriptive statistics R\nSummary statistics, variability, correlation, covariance\nExtreme values, problem missing values\nVisualization ggplot2 (Week 3)Layers, facets, geomsLayers, facets, geomsDescriptive statistics RDescriptive statistics RSummary statistics, variability, correlation, covarianceSummary statistics, variability, correlation, covarianceExtreme values, problem missing valuesExtreme values, problem missing valuesStatistical estimation (Week 4)\nDistributions\nSample techniques, confidence intervals, standard error\nStatistical estimation (Week 4)DistributionsSample techniques, confidence intervals, standard errorHypothesis testing (Week 5)\nInductive statistics R\nNull alternative hypothesis, t-test, p-value, fals\npositive/negative, Type II error\nHypothesis testing (Week 5)Inductive statistics RInductive statistics RNull alternative hypothesis, t-test, p-value, fals\npositive/negative, Type II errorNull alternative hypothesis, t-test, p-value, fals\npositive/negative, Type II errorHypothesis testing II (Week 6)\nRelation testing R\nHypothesis testing II (Week 6)Relation testing RProject presentations (Week 7)Project presentations (Week 7)","code":""},{"path":"syllabus.html","id":"requirements","chapter":"Syllabus","heading":"0.2 Requirements","text":"Test (30%): 90 min task solution R + explanation (exam week)Test (30%): 90 min task solution R + explanation (exam week)Project (25%): groups (3-4 students), one detailed report\n(essay) one - presentationProject (25%): groups (3-4 students), one detailed report\n(essay) one - presentationHomeworks essays (45%)Homeworks essays (45%)Extra tasks (+5%)Extra tasks (+5%)","code":""},{"path":"syllabus.html","id":"project","chapter":"Syllabus","heading":"0.2.1 Project","text":"end course make statistical report research project small groups. find proper dataset (kaggle, eurostat, UCI datasets etc.) conduct survey optional topic.week 7 hold presentation findings results. end week upload detailed essay project work.","code":""},{"path":"syllabus.html","id":"homework","chapter":"Syllabus","heading":"0.2.2 Homework","text":"Study period get 3-5 homeworks. number homeworks depends ont material progress. R code writing R code writing analysis (short essay methods results).Grades","code":""},{"path":"syllabus.html","id":"recommended-compulsory-reading","chapter":"Syllabus","heading":"0.3 Recommended (compulsory) reading","text":"Grolemund G & Wickham H:\nR Data ScienceGrolemund G & Wickham H:\nR Data ScienceGábor Békés & Gábor Kézdi: Data Analysis:\nPatterns, Prediction CausalityGábor Békés & Gábor Kézdi: Data Analysis:\nPatterns, Prediction Causality","code":""},{"path":"lecture1.html","id":"lecture1","chapter":"1 Lecture 1","heading":"1 Lecture 1","text":"","code":""},{"path":"seminar1.html","id":"seminar1","chapter":"2 Introduction to R","heading":"2 Introduction to R","text":"","code":""},{"path":"seminar1.html","id":"why-r","chapter":"2 Introduction to R","heading":"2.1 Why R?","text":"chapter discuss basics R programming.\nR free software, used millions field statistics, data science, economics many others.R programming language important tool data related tasks, much .\nJust like programming languages, R many additional packages, can extend basic functionality.\nR great (probably best) graphical tools create charts, shiny, can easily build minimalist web applications.\nlearn data manipulation, analysis create awesome reports, like dashboards.","code":""},{"path":"seminar1.html","id":"layout","chapter":"2 Introduction to R","heading":"2.2 Setup","text":"can download R RStudio official site RStudio.\nPlease install appropriate version based OS, forget also install R well.Run R’s installer file downloading process finished.\nNext, also need RStudio.installation process R RStudio finished, can open RStudio start learn software.","code":""},{"path":"seminar1.html","id":"our-first-meet-with-r","chapter":"2 Introduction to R","heading":"2.3 Our first meet with R","text":"RStudio dedicated IDEE R, means, make life much simplier.\nstead writing line code ourself, RStudio many built-functions help us.\nsee panes open RStudio:\nFigure 2.1: Panes RStudio\nSource\nwrite codes, like save.\nbasic extension codes .R, possibility (cover later). save code later use, can open script also simple text editor (like Notepad), since plain text. hit enter code wont executed, just simply start new line. want run code hit ctrl + enter execute single line, ctrl+shift+enter execute full script.\nSourceWe write codes, like save.\nbasic extension codes .R, possibility (cover later). save code later use, can open script also simple text editor (like Notepad), since plain text. hit enter code wont executed, just simply start new line. want run code hit ctrl + enter execute single line, ctrl+shift+enter execute full script.Console\nfind executed codes, response . example, type 2 + 2 hit enter, R execute expression, response 4.\nConsoleHere find executed codes, response . example, type 2 + 2 hit enter, R execute expression, response 4.Help\ncan use pane familier function. example, want know input can specify using mean, can type ?mean console, use search field pane. description function presented pane. (pane super useful exam)\nHelpYou can use pane familier function. example, want know input can specify using mean, can type ?mean console, use search field pane. description function presented pane. (pane super useful exam)HistoryHistoryFiles\ncan see list files current working directory. Working directory folder, R want currently read files. want import dataset, just click file pane.\nhighly recommend set project folder class later job. means , R creates folder puts .Rproj file . can always click .Rproj file return unfinished work. can customise R put variables environtent left last time, history used codes, see data copy + paste folder.\nFilesYou can see list files current working directory. Working directory folder, R want currently read files. want import dataset, just click file pane.highly recommend set project folder class later job. means , R creates folder puts .Rproj file . can always click .Rproj file return unfinished work. can customise R put variables environtent left last time, history used codes, see data copy + paste folder.PlotsPlotsPackages\ncan install packages pane. need given package, click install, start typing name. , activate packages time open R library(eurostat) command. can also use function package just simly type eurostat::get_eurostat().\nPackagesYou can install packages pane. need given package, click install, start typing name. , activate packages time open R library(eurostat) command. can also use function package just simly type eurostat::get_eurostat().Environment\ncan see list variables already created. example can type x = 3 console. Now x variable appear environment pane, can check value type x console. can also save variables .RData data format wish.\nEnvironmentHere can see list variables already created. example can type x = 3 console. Now x variable appear environment pane, can check value type x console. can also save variables .RData data format wish.ViewerViewer","code":"\n2 + 2\n#> [1] 4"},{"path":"seminar1.html","id":"data-types","chapter":"2 Introduction to R","heading":"2.4 Data types","text":"Lets see first, kind datatypes exist R. Lets assign variable called x., type x? can use class command answer .numeric1. means can use +, -, * operators .Lets see types.character, basically can contain kind letter, digits, white space.logical value. can TRUE FALSE","code":"\nx <- 4\nclass(x)\n#> [1] \"numeric\"\ny <- \"blue\"\nclass(y)\n#> [1] \"character\"\ndoes_it_rain <- TRUE\nclass(does_it_rain)\n#> [1] \"logical\""},{"path":"seminar1.html","id":"vectors","chapter":"2 Introduction to R","heading":"2.4.1 vectors","text":"can create vector c function. (combine)can asses given element :can use functions :can also easily create sequence syntax start:stopIf combine characters, mentiont can convert vector factor type. useful can enclose order vector want control possible values.\nLets see minimal exampleIf want sort vector, see Fourth comes right First. character vectors sorted alphabetical order. can solve factorWe can merge vectors data.frame, basically like excel table. column variable (header), row observation.NA stands “available”, values missing. times work data.frames (similarly like pandas python), important data type learn.Storing complex data, can use list. use data.frame need vectors equal length. hold, frequent case, want store collection data.frames, list perfect solution! rare issue, big panel dataset usually stored separated files (different file year, like: cis_survey2016.csv, cis_survey2017.csv). situations suggested store data list.Now mylist stores data.frame two vector. can access components [[ ]]. example, first element:","code":"\nx <- c(11, 201, 301)\nx\n#> [1]  11 201 301\nx[2]\n#> [1] 201\nsum(x)\n#> [1] 513\n1:10\n#>  [1]  1  2  3  4  5  6  7  8  9 10\nmy_vector <- c(\"First\", \"Second\", \"Third\", \"Fourth\")\nsort(my_vector)\n#> [1] \"First\"  \"Fourth\" \"Second\" \"Third\"\nmy_vector2 <- factor(my_vector, ordered = TRUE, levels = c(\"First\", \"Second\", \"Third\", \"Fourth\"))\nsort(my_vector2)\n#> [1] First  Second Third  Fourth\n#> Levels: First < Second < Third < Fourth\navengers_df <- data.frame(name = c(\"Captain America\", \"Hulk\", \"Dr. Strange\"), \n           color = c(\"blue\", \"green\", NA))\n\navengers_df\n#>              name color\n#> 1 Captain America  blue\n#> 2            Hulk green\n#> 3     Dr. Strange  <NA>\nmylist <- list(avengers_df, my_vector, x)\nmylist[[1]]\n#>              name color\n#> 1 Captain America  blue\n#> 2            Hulk green\n#> 3     Dr. Strange  <NA>"},{"path":"seminar1.html","id":"data-manipulation","chapter":"2 Introduction to R","heading":"2.5 Data manipulation","text":"","code":""},{"path":"seminar1.html","id":"import-data-into-r","chapter":"2 Introduction to R","heading":"2.5.1 Import data into R","text":"mentioned formely easiest way import data click files pane. However, manual step useful import analyse data , probably want use data next time well. way good idea copy paste code importing data script.\nFigure 2.2: Import csv data R\nfact, data working directory, can refer “relative referencing”. means type name file, full path, R automatically start look file working directory2.Now imported tidy dataset. column variable, row observation. Lets see select specific data . want analyse one column , can use $ operator.output pizza character vector currently, answers contain letters. options :Using .numeric function force R using values numerical data.got warning message. letters appear R convert values numbers, values became NA (Available) values.Remove letters answers convert vector correct datatype.manage , use syntax called regular expressions. want show 4 expressions now function. function gsub detect given letter character replace something. Lets see !can use last example solve problem.","code":"\nlibrary(readr)\ndf <- read_delim(\"da_q.csv\", delim = \";\", escape_double = FALSE, trim_ws = TRUE)\ndf <- read_delim(str_c(WD, \"/data/da_q.csv\"), delim = \";\", escape_double = FALSE, trim_ws = TRUE)\npizza <- df$`How many slices of pizza can you it at once?`\n\npizza\n#>  [1] \"8\"                                                         \n#>  [2] \"12\"                                                        \n#>  [3] \"Depends on size. Can be up to 5 slices of the medium pizza\"\n#>  [4] \"2\"                                                         \n#>  [5] \"3\"                                                         \n#>  [6] \"4\"                                                         \n#>  [7] \"4\"                                                         \n#>  [8] \"4\"                                                         \n#>  [9] \"3\"                                                         \n#> [10] \"2\"                                                         \n#> [11] \"4\"                                                         \n#> [12] \"3\"                                                         \n#> [13] \"3\"                                                         \n#> [14] \"2\"                                                         \n#> [15] \"2\"                                                         \n#> [16] \"4 and It depends how much I am hungry\"                     \n#> [17] \"4\"                                                         \n#> [18] \"3\"                                                         \n#> [19] \"2\"                                                         \n#> [20] \"6\"                                                         \n#> [21] \"3\"\nas.numeric(pizza)\n#> Warning: NAs introduced by coercion\n#>  [1]  8 12 NA  2  3  4  4  4  3  2  4  3  3  2  2 NA  4  3  2  6  3\ngsub(x = \"Awesome 12\", pattern = \"\\\\w\", replacement = \"B\") # every non-white space\n#> [1] \"BBBBBBB BB\"\ngsub(x = \"Awesome 12\", pattern = \"\\\\s\", replacement = \"B\") # every white space\n#> [1] \"AwesomeB12\"\ngsub(x = \"Awesome 12\", pattern = \"\\\\d\", replacement = \"B\") # every digit\n#> [1] \"Awesome BB\"\ngsub(x = \"Awesome 12\", pattern = \"\\\\D\", replacement = \"B\") # every non-digit value\n#> [1] \"BBBBBBBB12\"\npizza_only_digits <- gsub(x = pizza, pattern = \"\\\\D\", replacement = \"\") \n\npizza_only_digits\n#>  [1] \"8\"  \"12\" \"5\"  \"2\"  \"3\"  \"4\"  \"4\"  \"4\"  \"3\"  \"2\"  \"4\"  \"3\"  \"3\"  \"2\"  \"2\" \n#> [16] \"4\"  \"4\"  \"3\"  \"2\"  \"6\"  \"3\"\n\nas.numeric(pizza_only_digits)\n#>  [1]  8 12  5  2  3  4  4  4  3  2  4  3  3  2  2  4  4  3  2  6  3"},{"path":"seminar1.html","id":"conditional-statements","chapter":"2 Introduction to R","heading":"2.6 Conditional statements","text":"offen use conditional statement programming. clean concept: condition TRUE, evaluate following task.want write else statement R, highly recomment use snippet . Snippet means, type press shift + tab, R automaticly write framework use:condition use logical value input, condition. can use conditions following operators: <, >, <=, >=, ==, !=, .na, %%, stringr::str_detect().can also specify task R , statement false.","code":"\nif (condition) {\n  \n}\n4 < 5\n#> [1] TRUE\n5 <= 5\n#> [1] TRUE\n4 > 5\n#> [1] FALSE\n5 >=4\n#> [1] TRUE\n2 == 3 # equal?\n#> [1] FALSE\n(2 + 2) == 4\n#> [1] TRUE\n(2 + 2) != 4 # not equal?\n#> [1] FALSE\n3 != 3\n#> [1] FALSE\nis.na(4)\n#> [1] FALSE\nis.na(NA)\n#> [1] TRUE\n3 %in% c(1, 2, 3)\n#> [1] TRUE\nstringr::str_detect(string = \"this function is awesome!\", pattern = \"some\")\n#> [1] TRUE\nstringr::str_detect(string = \"this function is awesome!\", pattern = \"none\")\n#> [1] FALSE\nif (2>3) {\n  print(\"Print this\")\n} else {\n  print(\"Print that\")\n}\n#> [1] \"Print that\""},{"path":"seminar1.html","id":"loops","chapter":"2 Introduction to R","heading":"2.7 Loops","text":"","code":""},{"path":"seminar1.html","id":"while","chapter":"2 Introduction to R","heading":"2.7.1 While","text":"can also use loop specify task R condition TRUE.","code":"\nx <- 1\n\nwhile (x < 15) {\n  cat(paste0(x, \"^2=\")) # cat = print, just into the same line\n  cat(x^2)\n  cat(\"\\n\") # force R to create a new line\n  x <- x + 1 # if you miss this step then R will repeat the task infinit times\n}\n#> 1^2=1\n#> 2^2=4\n#> 3^2=9\n#> 4^2=16\n#> 5^2=25\n#> 6^2=36\n#> 7^2=49\n#> 8^2=64\n#> 9^2=81\n#> 10^2=100\n#> 11^2=121\n#> 12^2=144\n#> 13^2=169\n#> 14^2=196"},{"path":"seminar1.html","id":"for","chapter":"2 Introduction to R","heading":"2.7.2 For","text":"framewrok can specify task, R x times. example, print message 10 times.can use inside { parenthesis.","code":"\nfor (i in 1:10) {\n  print(\"You R amazing!\")\n}\n#> [1] \"You R amazing!\"\n#> [1] \"You R amazing!\"\n#> [1] \"You R amazing!\"\n#> [1] \"You R amazing!\"\n#> [1] \"You R amazing!\"\n#> [1] \"You R amazing!\"\n#> [1] \"You R amazing!\"\n#> [1] \"You R amazing!\"\n#> [1] \"You R amazing!\"\n#> [1] \"You R amazing!\"\nfor (i in 1:5) {\n  print(i)\n}\n#> [1] 1\n#> [1] 2\n#> [1] 3\n#> [1] 4\n#> [1] 5"},{"path":"seminar1.html","id":"functions","chapter":"2 Introduction to R","heading":"2.8 Functions","text":"offen work functions R, can also write . use function word specify input variables.","code":"\nmy_first_function <- function(x) {\n  # removed all non-digit characters from x, and take the squared of it.\n  as.numeric(gsub(x, pattern = \"\\\\D\", replacement = \"\"))^2\n}\n\nmy_first_function(\"Depends on, maybe 5 slices\")\n#> [1] 25"},{"path":"seminar1.html","id":"apply-family","chapter":"2 Introduction to R","heading":"2.9 Apply family","text":"family contains 3 functions, want show (complex ones, covered bookdown).function apply tells R use function row column data.frame. frist argument data.frame, third function shoul use second margin:\n- margin = 2: apply given function COLUMNS\n- margin = 1: apply given function ROWSNumber numeric answers quetions:Number numeric answers participant:Lapply similar list objects.interested number observation (length) vector:output still list. sapply solution want convert vector.","code":"\nnon_na <- function(x) {\n  # how many numeric observation are in the vector\n  sum(!is.na(as.numeric(x)))\n}\napply(df, 2, non_na)\n#>                                                                                ID \n#>                                                                                21 \n#>                    What is your zodiac? (https://www.astrology-zodiac-signs.com/) \n#>                                                                                 0 \n#>                                                       Do you prefer dogs or cats? \n#>                                                                                 0 \n#>                             What experiences do have on related to R programming? \n#>                                                                                 0 \n#>                                      How many slices of pizza can you it at once? \n#>                                                                                19 \n#>                                                             Do you wear glasses?2 \n#>                                                                                 0 \n#>                                       How many countries have you been to so far? \n#>                                                                                21 \n#>   How many instagram followers do you have? (zero, if you do not have an account) \n#>                                                                                20 \n#>                                        How many brothers and sisters do you have? \n#>                                                                                19 \n#>                              What is your batteries current charge level? (0-100) \n#>                                                                                19 \n#> What is the traditional food in your country? (you can mention more, if you wish) \n#>                                                                                 0\napply(df, 1, non_na)\n#>  [1] 6 6 4 5 6 6 6 6 6 6 5 6 6 6 6 4 6 6 6 6 5\nmylist <- list(\n  first_vector = c(1, 2, 3),\n  second_vector = letters # built in character vector, contains all the letters\n)\n\nmylist\n#> $first_vector\n#> [1] 1 2 3\n#> \n#> $second_vector\n#>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n#> [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\nout <- lapply(mylist, length)\n\nout\n#> $first_vector\n#> [1] 3\n#> \n#> $second_vector\n#> [1] 26\n\nclass(out)\n#> [1] \"list\"\nsapply(mylist, length)\n#>  first_vector second_vector \n#>             3            26"}]
