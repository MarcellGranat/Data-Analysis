[{"path":"index.html","id":"welcome","chapter":"Welcome","heading":"Welcome","text":"hope message finds well.online bookdown file, plan update regularly class material. suggest write code simultaneously us seminar, bugs can always occur blue… missed something just want revisit topic additional comments (probably exam day) page help.end course know:data types, data quality, data preprocessing?data types, data quality, data preprocessing?components tidyverse advantage?components tidyverse advantage?density, distribution function, quantile functions?density, distribution function, quantile functions?data clustering techniques?data clustering techniques?main techniques association analysis?main techniques association analysis?work R, one loved statistical programming language. afraid programming experience, beginner course. However, end program, hope find useful concept practical tips offer, able solve real life data analysis issues.","code":""},{"path":"syllabus.html","id":"syllabus","chapter":"Syllabus","heading":"Syllabus","text":"","code":""},{"path":"syllabus.html","id":"topics","chapter":"Syllabus","heading":"0.1 Topics","text":"Basic R knowledge (Week 1)\nData categorize, sampling, importing-exporting\nTypes, tables, selection, objects, functions\nBasic R knowledge (Week 1)Data categorize, sampling, importing-exportingData categorize, sampling, importing-exportingTypes, tables, selection, objects, functionsTypes, tables, selection, objects, functionsData manipulation Tidyverse (Week 2)\nFilter, group_by, arrange, summarize commands\n%\\>%\nJoin (mutating, filtering)\ntidy data (longer, wider)\nData manipulation Tidyverse (Week 2)Filter, group_by, arrange, summarize commandsFilter, group_by, arrange, summarize commands%\\>%%\\>%Join (mutating, filtering)Join (mutating, filtering)tidy data (longer, wider)tidy data (longer, wider)Visualization ggplot2 (Week 3)\nLayers, facets, geoms\nDescriptive statistics R\nSummary statistics, variability, correlation, covariance\nExtreme values, problem missing values\nVisualization ggplot2 (Week 3)Layers, facets, geomsLayers, facets, geomsDescriptive statistics RDescriptive statistics RSummary statistics, variability, correlation, covarianceSummary statistics, variability, correlation, covarianceExtreme values, problem missing valuesExtreme values, problem missing valuesStatistical estimation (Week 4)\nDistributions\nSample techniques, confidence intervals, standard error\nStatistical estimation (Week 4)DistributionsSample techniques, confidence intervals, standard errorHypothesis testing (Week 5)\nInductive statistics R\nNull alternative hypothesis, t-test, p-value, fals\npositive/negative, Type II error\nHypothesis testing (Week 5)Inductive statistics RInductive statistics RNull alternative hypothesis, t-test, p-value, fals\npositive/negative, Type II errorNull alternative hypothesis, t-test, p-value, fals\npositive/negative, Type II errorHypothesis testing II (Week 6)\nRelation testing R\nHypothesis testing II (Week 6)Relation testing RProject presentations (Week 7)Project presentations (Week 7)","code":""},{"path":"syllabus.html","id":"requirements","chapter":"Syllabus","heading":"0.2 Requirements","text":"Test (30%): 90 min task solution R + explanation (exam week)Test (30%): 90 min task solution R + explanation (exam week)Project (25%): groups (3-4 students), one detailed report\n(essay) one - presentationProject (25%): groups (3-4 students), one detailed report\n(essay) one - presentationHomeworks essays (45%)Homeworks essays (45%)Extra tasks (+5%)Extra tasks (+5%)","code":""},{"path":"syllabus.html","id":"project","chapter":"Syllabus","heading":"0.2.1 Project","text":"end course make statistical report research project small groups. find proper dataset (kaggle, eurostat, UCI datasets etc.) conduct survey optional topic.week 7 hold presentation findings results. end week upload detailed essay project work.","code":""},{"path":"syllabus.html","id":"homework","chapter":"Syllabus","heading":"0.2.2 Homework","text":"Study period get 3-5 homeworks. number homeworks depends ont material progress. R code writing R code writing analysis (short essay methods results).Grades","code":""},{"path":"syllabus.html","id":"recommended-compulsory-reading","chapter":"Syllabus","heading":"0.3 Recommended (compulsory) reading","text":"Grolemund G & Wickham H:\nR Data ScienceGrolemund G & Wickham H:\nR Data ScienceGábor Békés & Gábor Kézdi: Data Analysis:\nPatterns, Prediction CausalityGábor Békés & Gábor Kézdi: Data Analysis:\nPatterns, Prediction Causality","code":""},{"path":"lecture1.html","id":"lecture1","chapter":"1 Lecture 1","heading":"1 Lecture 1","text":"","code":""},{"path":"seminar1.html","id":"seminar1","chapter":"2 Introduction to R","heading":"2 Introduction to R","text":"","code":""},{"path":"seminar1.html","id":"why-r","chapter":"2 Introduction to R","heading":"2.1 Why R?","text":"chapter discuss basics R programming.\nR free software, used millions field statistics, data science, economics many others.R programming language important tool data related tasks, much .\nJust like programming languages, R many additional packages, can extend basic functionality.\nR great (probably best) graphical tools create charts, shiny, can easily build minimalist web applications.\nlearn data manipulation, analysis create awesome reports, like dashboards.","code":""},{"path":"seminar1.html","id":"layout","chapter":"2 Introduction to R","heading":"2.2 Setup","text":"can download R RStudio official site RStudio.\nPlease install appropriate version based OS, forget also install R well.Run R’s installer file downloading process finished.\nNext, also need RStudio.installation process R RStudio finished, can open RStudio start learn software.","code":""},{"path":"seminar1.html","id":"our-first-meet-with-r","chapter":"2 Introduction to R","heading":"2.3 Our first meet with R","text":"RStudio dedicated IDEE R, means, make life much simplier.\nstead writing line code ourself, RStudio many built-functions help us.\nsee panes open RStudio:\nFigure 2.1: Panes RStudio\nSource\nwrite codes, like save.\nbasic extension codes .R, possibility (cover later). save code later use, can open script also simple text editor (like Notepad), since plain text. hit enter code wont executed, just simply start new line. want run code hit ctrl + enter execute single line, ctrl+shift+enter execute full script.\nSourceWe write codes, like save.\nbasic extension codes .R, possibility (cover later). save code later use, can open script also simple text editor (like Notepad), since plain text. hit enter code wont executed, just simply start new line. want run code hit ctrl + enter execute single line, ctrl+shift+enter execute full script.Console\nfind executed codes, response . example, type 2 + 2 hit enter, R execute expression, response 4.\nConsoleHere find executed codes, response . example, type 2 + 2 hit enter, R execute expression, response 4.Help\ncan use pane familier function. example, want know input can specify using mean, can type ?mean console, use search field pane. description function presented pane. (pane super useful exam)\nHelpYou can use pane familier function. example, want know input can specify using mean, can type ?mean console, use search field pane. description function presented pane. (pane super useful exam)HistoryHistoryFiles\ncan see list files current working directory. Working directory folder, R want currently read files. want import dataset, just click file pane.\nhighly recommend set project folder class later job. means , R creates folder puts .Rproj file . can always click .Rproj file return unfinished work. can customise R put variables environtent left last time, history used codes, see data copy + paste folder.\nFilesYou can see list files current working directory. Working directory folder, R want currently read files. want import dataset, just click file pane.highly recommend set project folder class later job. means , R creates folder puts .Rproj file . can always click .Rproj file return unfinished work. can customise R put variables environtent left last time, history used codes, see data copy + paste folder.PlotsPlotsPackages\ncan install packages pane. need given package, click install, start typing name. , activate packages time open R library(eurostat) command. can also use function package just simly type eurostat::get_eurostat().\nPackagesYou can install packages pane. need given package, click install, start typing name. , activate packages time open R library(eurostat) command. can also use function package just simly type eurostat::get_eurostat().Environment\ncan see list variables already created. example can type x = 3 console. Now x variable appear environment pane, can check value type x console. can also save variables .RData data format wish.\nEnvironmentHere can see list variables already created. example can type x = 3 console. Now x variable appear environment pane, can check value type x console. can also save variables .RData data format wish.ViewerViewer","code":"\n2 + 2\n#> [1] 4"},{"path":"seminar1.html","id":"data-types","chapter":"2 Introduction to R","heading":"2.4 Data types","text":"Lets see first, kind datatypes exist R. Lets assign variable called x., type x? can use class command answer .numeric1. means can use +, -, * operators .Lets see types.character, basically can contain kind letter, digits, white space.logical value. can TRUE FALSE","code":"\nx <- 4\nclass(x)\n#> [1] \"numeric\"\ny <- \"blue\"\nclass(y)\n#> [1] \"character\"\ndoes_it_rain <- TRUE\nclass(does_it_rain)\n#> [1] \"logical\""},{"path":"seminar1.html","id":"vectors","chapter":"2 Introduction to R","heading":"2.4.1 vectors","text":"can create vector c function. (combine)can asses given element :can use functions :can also easily create sequence syntax start:stopIf combine characters, mentiont can convert vector factor type. useful can enclose order vector want control possible values.\nLets see minimal exampleIf want sort vector, see Fourth comes right First. character vectors sorted alphabetical order. can solve factorWe can merge vectors data.frame, basically like excel table. column variable (header), row observation.NA stands “available”, values missing. times work data.frames (similarly like pandas python), important data type learn.Storing complex data, can use list. use data.frame need vectors equal length. hold, frequent case, want store collection data.frames, list perfect solution! rare issue, big panel dataset usually stored separated files (different file year, like: cis_survey2016.csv, cis_survey2017.csv). situations suggested store data list.Now mylist stores data.frame two vector. can access components [[ ]]. example, first element:","code":"\nx <- c(11, 201, 301)\nx\n#> [1]  11 201 301\nx[2]\n#> [1] 201\nsum(x)\n#> [1] 513\n1:10\n#>  [1]  1  2  3  4  5  6  7  8  9 10\nmy_vector <- c(\"First\", \"Second\", \"Third\", \"Fourth\")\nsort(my_vector)\n#> [1] \"First\"  \"Fourth\" \"Second\" \"Third\"\nmy_vector2 <- factor(my_vector, ordered = TRUE, levels = c(\"First\", \"Second\", \"Third\", \"Fourth\"))\nsort(my_vector2)\n#> [1] First  Second Third  Fourth\n#> Levels: First < Second < Third < Fourth\navengers_df <- data.frame(name = c(\"Captain America\", \"Hulk\", \"Dr. Strange\"), \n           color = c(\"blue\", \"green\", NA))\n\navengers_df\n#>              name color\n#> 1 Captain America  blue\n#> 2            Hulk green\n#> 3     Dr. Strange  <NA>\nmylist <- list(avengers_df, my_vector, x)\nmylist[[1]]\n#>              name color\n#> 1 Captain America  blue\n#> 2            Hulk green\n#> 3     Dr. Strange  <NA>"},{"path":"seminar1.html","id":"data-manipulation","chapter":"2 Introduction to R","heading":"2.5 Data manipulation","text":"","code":""},{"path":"seminar1.html","id":"import-data-into-r","chapter":"2 Introduction to R","heading":"2.5.1 Import data into R","text":"mentioned formely easiest way import data click files pane. However, manual step useful import analyse data , probably want use data next time well. way good idea copy paste code importing data script.\nFigure 2.2: Import csv data R\nfact, data working directory, can refer “relative referencing”. means type name file, full path, R automatically start look file working directory2.Now imported tidy dataset. column variable, row observation. Lets see select specific data . want analyse one column , can use $ operator.output pizza character vector currently, answers contain letters. options :Using .numeric function force R using values numerical data.got warning message. letters appear R convert values numbers, values became NA (Available) values.Remove letters answers convert vector correct datatype.manage , use syntax called regular expressions. want show 4 expressions now function. function gsub detect given letter character replace something. Lets see !can use last example solve problem.","code":"\nlibrary(readr)\ndf <- read_delim(\"da_q.csv\", delim = \";\", escape_double = FALSE, trim_ws = TRUE)\ndf <- read_delim(str_c(WD, \"/data/da_q.csv\"), delim = \";\", escape_double = FALSE, trim_ws = TRUE)\npizza <- df$`How many slices of pizza can you it at once?`\n\npizza\n#>  [1] \"8\"                                                         \n#>  [2] \"12\"                                                        \n#>  [3] \"Depends on size. Can be up to 5 slices of the medium pizza\"\n#>  [4] \"2\"                                                         \n#>  [5] \"3\"                                                         \n#>  [6] \"4\"                                                         \n#>  [7] \"4\"                                                         \n#>  [8] \"4\"                                                         \n#>  [9] \"3\"                                                         \n#> [10] \"2\"                                                         \n#> [11] \"4\"                                                         \n#> [12] \"3\"                                                         \n#> [13] \"3\"                                                         \n#> [14] \"2\"                                                         \n#> [15] \"2\"                                                         \n#> [16] \"4 and It depends how much I am hungry\"                     \n#> [17] \"4\"                                                         \n#> [18] \"3\"                                                         \n#> [19] \"2\"                                                         \n#> [20] \"6\"                                                         \n#> [21] \"3\"\nas.numeric(pizza)\n#> Warning: NAs introduced by coercion\n#>  [1]  8 12 NA  2  3  4  4  4  3  2  4  3  3  2  2 NA  4  3  2  6  3\ngsub(x = \"Awesome 12\", pattern = \"\\\\w\", replacement = \"B\") # every non-white space\n#> [1] \"BBBBBBB BB\"\ngsub(x = \"Awesome 12\", pattern = \"\\\\s\", replacement = \"B\") # every white space\n#> [1] \"AwesomeB12\"\ngsub(x = \"Awesome 12\", pattern = \"\\\\d\", replacement = \"B\") # every digit\n#> [1] \"Awesome BB\"\ngsub(x = \"Awesome 12\", pattern = \"\\\\D\", replacement = \"B\") # every non-digit value\n#> [1] \"BBBBBBBB12\"\npizza_only_digits <- gsub(x = pizza, pattern = \"\\\\D\", replacement = \"\") \n\npizza_only_digits\n#>  [1] \"8\"  \"12\" \"5\"  \"2\"  \"3\"  \"4\"  \"4\"  \"4\"  \"3\"  \"2\"  \"4\"  \"3\"  \"3\"  \"2\"  \"2\" \n#> [16] \"4\"  \"4\"  \"3\"  \"2\"  \"6\"  \"3\"\n\nas.numeric(pizza_only_digits)\n#>  [1]  8 12  5  2  3  4  4  4  3  2  4  3  3  2  2  4  4  3  2  6  3"},{"path":"seminar1.html","id":"conditional-statements","chapter":"2 Introduction to R","heading":"2.6 Conditional statements","text":"offen use conditional statement programming. clean concept: condition TRUE, evaluate following task.want write else statement R, highly recomment use snippet . Snippet means, type press shift + tab, R automaticly write framework use:condition use logical value input, condition. can use conditions following operators: <, >, <=, >=, ==, !=, .na, %%, stringr::str_detect().can also specify task R , statement false.","code":"\nif (condition) {\n  \n}\n4 < 5\n#> [1] TRUE\n5 <= 5\n#> [1] TRUE\n4 > 5\n#> [1] FALSE\n5 >=4\n#> [1] TRUE\n2 == 3 # equal?\n#> [1] FALSE\n(2 + 2) == 4\n#> [1] TRUE\n(2 + 2) != 4 # not equal?\n#> [1] FALSE\n3 != 3\n#> [1] FALSE\nis.na(4)\n#> [1] FALSE\nis.na(NA)\n#> [1] TRUE\n3 %in% c(1, 2, 3)\n#> [1] TRUE\nstringr::str_detect(string = \"this function is awesome!\", pattern = \"some\")\n#> [1] TRUE\nstringr::str_detect(string = \"this function is awesome!\", pattern = \"none\")\n#> [1] FALSE\nif (2>3) {\n  print(\"Print this\")\n} else {\n  print(\"Print that\")\n}\n#> [1] \"Print that\""},{"path":"seminar1.html","id":"loops","chapter":"2 Introduction to R","heading":"2.7 Loops","text":"","code":""},{"path":"seminar1.html","id":"while","chapter":"2 Introduction to R","heading":"2.7.1 While","text":"can also use loop specify task R condition TRUE.","code":"\nx <- 1\n\nwhile (x < 15) {\n  cat(paste0(x, \"^2=\")) # cat = print, just into the same line\n  cat(x^2)\n  cat(\"\\n\") # force R to create a new line\n  x <- x + 1 # if you miss this step then R will repeat the task infinit times\n}\n#> 1^2=1\n#> 2^2=4\n#> 3^2=9\n#> 4^2=16\n#> 5^2=25\n#> 6^2=36\n#> 7^2=49\n#> 8^2=64\n#> 9^2=81\n#> 10^2=100\n#> 11^2=121\n#> 12^2=144\n#> 13^2=169\n#> 14^2=196"},{"path":"seminar1.html","id":"for","chapter":"2 Introduction to R","heading":"2.7.2 For","text":"framewrok can specify task, R x times. example, print message 10 times.can use inside { parenthesis.","code":"\nfor (i in 1:10) {\n  print(\"You R amazing!\")\n}\n#> [1] \"You R amazing!\"\n#> [1] \"You R amazing!\"\n#> [1] \"You R amazing!\"\n#> [1] \"You R amazing!\"\n#> [1] \"You R amazing!\"\n#> [1] \"You R amazing!\"\n#> [1] \"You R amazing!\"\n#> [1] \"You R amazing!\"\n#> [1] \"You R amazing!\"\n#> [1] \"You R amazing!\"\nfor (i in 1:5) {\n  print(i)\n}\n#> [1] 1\n#> [1] 2\n#> [1] 3\n#> [1] 4\n#> [1] 5"},{"path":"seminar1.html","id":"functions","chapter":"2 Introduction to R","heading":"2.8 Functions","text":"offen work functions R, can also write . use function word specify input variables.","code":"\nmy_first_function <- function(x) {\n  # removed all non-digit characters from x, and take the squared of it.\n  as.numeric(gsub(x, pattern = \"\\\\D\", replacement = \"\"))^2\n}\n\nmy_first_function(\"Depends on, maybe 5 slices\")\n#> [1] 25"},{"path":"seminar1.html","id":"apply-family","chapter":"2 Introduction to R","heading":"2.9 Apply family","text":"family contains 3 functions, want show (complex ones, covered bookdown).function apply tells R use function row column data.frame. frist argument data.frame, third function shoul use second margin:\n- margin = 2: apply given function COLUMNS\n- margin = 1: apply given function ROWSNumber numeric answers quetions:Number numeric answers participant:Lapply similar list objects.interested number observation (length) vector:output still list. sapply solution want convert vector.","code":"\nnon_na <- function(x) {\n  # how many numeric observation are in the vector\n  sum(!is.na(as.numeric(x)))\n}\napply(df, 2, non_na)\n#>                                                                                ID \n#>                                                                                21 \n#>                    What is your zodiac? (https://www.astrology-zodiac-signs.com/) \n#>                                                                                 0 \n#>                                                       Do you prefer dogs or cats? \n#>                                                                                 0 \n#>                             What experiences do have on related to R programming? \n#>                                                                                 0 \n#>                                      How many slices of pizza can you it at once? \n#>                                                                                19 \n#>                                                             Do you wear glasses?2 \n#>                                                                                 0 \n#>                                       How many countries have you been to so far? \n#>                                                                                21 \n#>   How many instagram followers do you have? (zero, if you do not have an account) \n#>                                                                                20 \n#>                                        How many brothers and sisters do you have? \n#>                                                                                19 \n#>                              What is your batteries current charge level? (0-100) \n#>                                                                                19 \n#> What is the traditional food in your country? (you can mention more, if you wish) \n#>                                                                                 0\napply(df, 1, non_na)\n#>  [1] 6 6 4 5 6 6 6 6 6 6 5 6 6 6 6 4 6 6 6 6 5\nmylist <- list(\n  first_vector = c(1, 2, 3),\n  second_vector = letters # built in character vector, contains all the letters\n)\n\nmylist\n#> $first_vector\n#> [1] 1 2 3\n#> \n#> $second_vector\n#>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\"\n#> [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\"\nout <- lapply(mylist, length)\n\nout\n#> $first_vector\n#> [1] 3\n#> \n#> $second_vector\n#> [1] 26\n\nclass(out)\n#> [1] \"list\"\nsapply(mylist, length)\n#>  first_vector second_vector \n#>             3            26"},{"path":"lecture2.html","id":"lecture2","chapter":"3 Lecture 2","heading":"3 Lecture 2","text":"","code":""},{"path":"seminar2.html","id":"seminar2","chapter":"4 Markdown & Tidyverse","heading":"4 Markdown & Tidyverse","text":"","code":""},{"path":"seminar2.html","id":"markdown","chapter":"4 Markdown & Tidyverse","heading":"4.1 Markdown","text":"Last week wrote codes Source pane, save codes revisit file file explorer, can see extension file .R. can open file text editor (like Notepad) see codes. .R file can write codes comments, hit ctrl + shift + enter lines evaluated. times goal use .R files , want reuse codes frequently (like downloading data website).Another possible extension files .Rmd, stands R MarkDown. file format can combine text, R codes output one single document. now, use RMarkdown class. Please visit following website find useful examples: https://rmarkdown.rstudio.com/articles_intro.html","code":""},{"path":"seminar2.html","id":"introduction-to-the-tidyverse","chapter":"4 Markdown & Tidyverse","heading":"4.2 Introduction to the tidyverse","text":"work tidyverse today. can simply install CRAN (go Packages pane click install button). tidyverse simple package. “tidyverse set packages work harmony share common data representations […]”Tidyverse contains important packages ’re likely use everyday data analyses:ggplot2, data visualisation.ggplot2, data visualisation.dplyr, data manipulation.dplyr, data manipulation.tidyr, data tidying.tidyr, data tidying.readr, data import.readr, data import.purrr, functional programming.purrr, functional programming.tibble, tibbles, modern re-imagining data frames.tibble, tibbles, modern re-imagining data frames.stringr, strings.stringr, strings.forcats, factors.forcats, factors.installed packages, can load core packages `library` command. receive warning message, worry, fine.","code":"\nlibrary(tidyverse)"},{"path":"seminar2.html","id":"the-operator","chapter":"4 Markdown & Tidyverse","heading":"4.3 The %>% operator","text":"operator written ctrl + shift + m, denoted %>%, pronounce pipe. understand relevance, think like … . opreator forward value previous expression next function first unspecified input. Lets see example:first generate numerical vector trajectories standard normal distribution.visualize distribution histogram.\nFigure 4.1: Histogram standard normal distribution\nNow assign norm_sample object use single graph. working project confusing tons one time used objects environment (Like DataFrameAfterCleaningStep1, DataFrameAfterCleaningStep2, DataFrameAfterCleaningStep3, etc.).pipe operator can embed several steps one single workflow. way assign norm_sample object. simple generate random values draw distribution.\nFigure 4.2: Histogram standard normal distribution using pipe\nmay see title plot changed (probably graph also changed bit, since chances low generate exactly 1000 random values). pipe many tidyverse function works lambda like function framework. means can refer input value (one single input) ..Example:result 16, since 2 + 2 = 4, 4 * 4 equals 16.pipe may seem unrelevant first, one powerful tool R complex data manipulating steps. cover core functions dplyr chapter, appear following video (37:30 - 38:30), familier , see motivation behind pipe.filter: filter rows, condition(s) TRUE select: select specified columns mutate: specify new column change existing onesummary","code":"\nnorm_sample <- rnorm(n = 1000, mean = 0, sd = 1) # standard normal\nhist(norm_sample)\nrnorm(n = 1000, mean = 0, sd = 1) %>% \n  hist()\n(2 + 2) %>% \n  {. * .}\n#> [1] 16\nfertility_df <- read_csv(\"DP_LIVE_22092021161631568.csv\")\nfertility_df\n#> # A tibble: 3,193 x 8\n#>    LOCATION INDICATOR SUBJECT MEASURE   FREQUENCY  TIME Value `Flag Codes`\n#>    <chr>    <chr>     <chr>   <chr>     <chr>     <dbl> <dbl> <lgl>       \n#>  1 AUS      FERTILITY TOT     CHD_WOMAN A          1960  3.45 NA          \n#>  2 AUS      FERTILITY TOT     CHD_WOMAN A          1961  3.55 NA          \n#>  3 AUS      FERTILITY TOT     CHD_WOMAN A          1962  3.43 NA          \n#>  4 AUS      FERTILITY TOT     CHD_WOMAN A          1963  3.34 NA          \n#>  5 AUS      FERTILITY TOT     CHD_WOMAN A          1964  3.15 NA          \n#>  6 AUS      FERTILITY TOT     CHD_WOMAN A          1965  2.97 NA          \n#>  7 AUS      FERTILITY TOT     CHD_WOMAN A          1966  2.89 NA          \n#>  8 AUS      FERTILITY TOT     CHD_WOMAN A          1967  2.85 NA          \n#>  9 AUS      FERTILITY TOT     CHD_WOMAN A          1968  2.89 NA          \n#> 10 AUS      FERTILITY TOT     CHD_WOMAN A          1969  2.89 NA          \n#> # ... with 3,183 more rows\ncount(fertility_df, LOCATION)\n#> # A tibble: 54 x 2\n#>    LOCATION     n\n#>    <chr>    <int>\n#>  1 ARG         60\n#>  2 AUS         60\n#>  3 AUT         61\n#>  4 BEL         60\n#>  5 BGR         60\n#>  6 BRA         60\n#>  7 CAN         60\n#>  8 CHE         61\n#>  9 CHL         60\n#> 10 CHN         60\n#> # ... with 44 more rows\nfertility_df %>% # %>% = the 1st argument of count function is the fertility_df data.frame\n  count(INDICATOR)\n#> # A tibble: 1 x 2\n#>   INDICATOR     n\n#>   <chr>     <int>\n#> 1 FERTILITY  3193\nfertility_df %>% \n  count(SUBJECT)\n#> # A tibble: 1 x 2\n#>   SUBJECT     n\n#>   <chr>   <int>\n#> 1 TOT      3193\nfertility_df %>% \n  count(LOCATION, sort = TRUE)\n#> # A tibble: 54 x 2\n#>    LOCATION     n\n#>    <chr>    <int>\n#>  1 AUT         61\n#>  2 CHE         61\n#>  3 CZE         61\n#>  4 DNK         61\n#>  5 EST         61\n#>  6 FIN         61\n#>  7 FRA         61\n#>  8 LUX         61\n#>  9 NOR         61\n#> 10 NZL         61\n#> # ... with 44 more rows\nfertility_df %>% \n  count(LOCATION, TIME)\n#> # A tibble: 3,193 x 3\n#>    LOCATION  TIME     n\n#>    <chr>    <dbl> <int>\n#>  1 ARG       1960     1\n#>  2 ARG       1961     1\n#>  3 ARG       1962     1\n#>  4 ARG       1963     1\n#>  5 ARG       1964     1\n#>  6 ARG       1965     1\n#>  7 ARG       1966     1\n#>  8 ARG       1967     1\n#>  9 ARG       1968     1\n#> 10 ARG       1969     1\n#> # ... with 3,183 more rows\ngdp_df <- read_csv(\"DP_LIVE_22092021163414835.csv\")\ngdp_df %>% \n  count(MEASURE, SUBJECT)\n#> # A tibble: 3 x 3\n#>   MEASURE  SUBJECT     n\n#>   <chr>    <chr>   <int>\n#> 1 IDX      VOLIDX   8891\n#> 2 PC_CHGPP TOT     11801\n#> 3 PC_CHGPY TOT      9385\ngdp_df %>% \n  count(FREQUENCY)\n#> # A tibble: 2 x 2\n#>   FREQUENCY     n\n#>   <chr>     <int>\n#> 1 A          4093\n#> 2 Q         25984\ngdp_df %>% \n  filter(SUBJECT == \"TOT\" & MEASURE == \"PC_CHGPY\" & FREQUENCY != \"A\") %>% \n  mutate(TIME = lubridate::yq(TIME)) %>% \n  filter(TIME == max(TIME)) %>% \n  arrange(desc(Value)) %>% \n  select(geo = LOCATION, gdp_change = Value)\n#> # A tibble: 49 x 2\n#>    geo   gdp_change\n#>    <chr>      <dbl>\n#>  1 GBR         22.2\n#>  2 TUR         21.4\n#>  3 IRL         21.1\n#>  4 IND         20.9\n#>  5 ESP         19.8\n#>  6 MEX         19.5\n#>  7 FRA         18.7\n#>  8 HUN         17.7\n#>  9 NZL         17.4\n#> 10 ITA         17.3\n#> # ... with 39 more rows\ngdp_df %>% \n  select(1)\n#> # A tibble: 30,077 x 1\n#>    LOCATION\n#>    <chr>   \n#>  1 OECD    \n#>  2 OECD    \n#>  3 OECD    \n#>  4 OECD    \n#>  5 OECD    \n#>  6 OECD    \n#>  7 OECD    \n#>  8 OECD    \n#>  9 OECD    \n#> 10 OECD    \n#> # ... with 30,067 more rows\n\ngdp_df %>% \n  select(-1)\n#> # A tibble: 30,077 x 7\n#>    INDICATOR SUBJECT MEASURE  FREQUENCY TIME  Value `Flag Codes`\n#>    <chr>     <chr>   <chr>    <chr>     <chr> <dbl> <chr>       \n#>  1 QGDP      TOT     PC_CHGPP A         1962   5.70 <NA>        \n#>  2 QGDP      TOT     PC_CHGPP A         1963   5.20 <NA>        \n#>  3 QGDP      TOT     PC_CHGPP A         1964   6.38 <NA>        \n#>  4 QGDP      TOT     PC_CHGPP A         1965   5.35 <NA>        \n#>  5 QGDP      TOT     PC_CHGPP A         1966   5.75 <NA>        \n#>  6 QGDP      TOT     PC_CHGPP A         1967   3.96 <NA>        \n#>  7 QGDP      TOT     PC_CHGPP A         1968   5.92 <NA>        \n#>  8 QGDP      TOT     PC_CHGPP A         1969   5.57 <NA>        \n#>  9 QGDP      TOT     PC_CHGPP A         1970   3.94 <NA>        \n#> 10 QGDP      TOT     PC_CHGPP A         1971   3.70 <NA>        \n#> # ... with 30,067 more rows\n\ngdp_df %>% \n  select(1:2)\n#> # A tibble: 30,077 x 2\n#>    LOCATION INDICATOR\n#>    <chr>    <chr>    \n#>  1 OECD     QGDP     \n#>  2 OECD     QGDP     \n#>  3 OECD     QGDP     \n#>  4 OECD     QGDP     \n#>  5 OECD     QGDP     \n#>  6 OECD     QGDP     \n#>  7 OECD     QGDP     \n#>  8 OECD     QGDP     \n#>  9 OECD     QGDP     \n#> 10 OECD     QGDP     \n#> # ... with 30,067 more rows\n\ngdp_df %>% \n  select(LOCATION:TIME)\n#> # A tibble: 30,077 x 6\n#>    LOCATION INDICATOR SUBJECT MEASURE  FREQUENCY TIME \n#>    <chr>    <chr>     <chr>   <chr>    <chr>     <chr>\n#>  1 OECD     QGDP      TOT     PC_CHGPP A         1962 \n#>  2 OECD     QGDP      TOT     PC_CHGPP A         1963 \n#>  3 OECD     QGDP      TOT     PC_CHGPP A         1964 \n#>  4 OECD     QGDP      TOT     PC_CHGPP A         1965 \n#>  5 OECD     QGDP      TOT     PC_CHGPP A         1966 \n#>  6 OECD     QGDP      TOT     PC_CHGPP A         1967 \n#>  7 OECD     QGDP      TOT     PC_CHGPP A         1968 \n#>  8 OECD     QGDP      TOT     PC_CHGPP A         1969 \n#>  9 OECD     QGDP      TOT     PC_CHGPP A         1970 \n#> 10 OECD     QGDP      TOT     PC_CHGPP A         1971 \n#> # ... with 30,067 more rows\n\ngdp_df %>% \n  select(TIME, LOCATION, everything())\n#> # A tibble: 30,077 x 8\n#>    TIME  LOCATION INDICATOR SUBJECT MEASURE  FREQUENCY Value `Flag Codes`\n#>    <chr> <chr>    <chr>     <chr>   <chr>    <chr>     <dbl> <chr>       \n#>  1 1962  OECD     QGDP      TOT     PC_CHGPP A          5.70 <NA>        \n#>  2 1963  OECD     QGDP      TOT     PC_CHGPP A          5.20 <NA>        \n#>  3 1964  OECD     QGDP      TOT     PC_CHGPP A          6.38 <NA>        \n#>  4 1965  OECD     QGDP      TOT     PC_CHGPP A          5.35 <NA>        \n#>  5 1966  OECD     QGDP      TOT     PC_CHGPP A          5.75 <NA>        \n#>  6 1967  OECD     QGDP      TOT     PC_CHGPP A          3.96 <NA>        \n#>  7 1968  OECD     QGDP      TOT     PC_CHGPP A          5.92 <NA>        \n#>  8 1969  OECD     QGDP      TOT     PC_CHGPP A          5.57 <NA>        \n#>  9 1970  OECD     QGDP      TOT     PC_CHGPP A          3.94 <NA>        \n#> 10 1971  OECD     QGDP      TOT     PC_CHGPP A          3.70 <NA>        \n#> # ... with 30,067 more rows\ngdp_df %>% \n  mutate(g = 1 + Value/100)\n#> # A tibble: 30,077 x 9\n#>    LOCATION INDICATOR SUBJECT MEASURE  FREQUENCY TIME  Value `Flag Codes`     g\n#>    <chr>    <chr>     <chr>   <chr>    <chr>     <chr> <dbl> <chr>        <dbl>\n#>  1 OECD     QGDP      TOT     PC_CHGPP A         1962   5.70 <NA>          1.06\n#>  2 OECD     QGDP      TOT     PC_CHGPP A         1963   5.20 <NA>          1.05\n#>  3 OECD     QGDP      TOT     PC_CHGPP A         1964   6.38 <NA>          1.06\n#>  4 OECD     QGDP      TOT     PC_CHGPP A         1965   5.35 <NA>          1.05\n#>  5 OECD     QGDP      TOT     PC_CHGPP A         1966   5.75 <NA>          1.06\n#>  6 OECD     QGDP      TOT     PC_CHGPP A         1967   3.96 <NA>          1.04\n#>  7 OECD     QGDP      TOT     PC_CHGPP A         1968   5.92 <NA>          1.06\n#>  8 OECD     QGDP      TOT     PC_CHGPP A         1969   5.57 <NA>          1.06\n#>  9 OECD     QGDP      TOT     PC_CHGPP A         1970   3.94 <NA>          1.04\n#> 10 OECD     QGDP      TOT     PC_CHGPP A         1971   3.70 <NA>          1.04\n#> # ... with 30,067 more rows\n\ngdp_df %>% \n  mutate(Value = 1 + Value/100)\n#> # A tibble: 30,077 x 8\n#>    LOCATION INDICATOR SUBJECT MEASURE  FREQUENCY TIME  Value `Flag Codes`\n#>    <chr>    <chr>     <chr>   <chr>    <chr>     <chr> <dbl> <chr>       \n#>  1 OECD     QGDP      TOT     PC_CHGPP A         1962   1.06 <NA>        \n#>  2 OECD     QGDP      TOT     PC_CHGPP A         1963   1.05 <NA>        \n#>  3 OECD     QGDP      TOT     PC_CHGPP A         1964   1.06 <NA>        \n#>  4 OECD     QGDP      TOT     PC_CHGPP A         1965   1.05 <NA>        \n#>  5 OECD     QGDP      TOT     PC_CHGPP A         1966   1.06 <NA>        \n#>  6 OECD     QGDP      TOT     PC_CHGPP A         1967   1.04 <NA>        \n#>  7 OECD     QGDP      TOT     PC_CHGPP A         1968   1.06 <NA>        \n#>  8 OECD     QGDP      TOT     PC_CHGPP A         1969   1.06 <NA>        \n#>  9 OECD     QGDP      TOT     PC_CHGPP A         1970   1.04 <NA>        \n#> 10 OECD     QGDP      TOT     PC_CHGPP A         1971   1.04 <NA>        \n#> # ... with 30,067 more rows\n\ngdp_df %>% \n  filter(FREQUENCY != \"A\") %>% \n  mutate(\n    TIME = lubridate::yq(TIME),\n    Value = 1 + Value/100\n  )\n#> # A tibble: 25,984 x 8\n#>    LOCATION INDICATOR SUBJECT MEASURE  FREQUENCY TIME       Value `Flag Codes`\n#>    <chr>    <chr>     <chr>   <chr>    <chr>     <date>     <dbl> <chr>       \n#>  1 DEU      QGDP      TOT     PC_CHGPY Q         1961-01-01 1.07  E           \n#>  2 DEU      QGDP      TOT     PC_CHGPY Q         1961-04-01 1.05  E           \n#>  3 DEU      QGDP      TOT     PC_CHGPY Q         1961-07-01 1.04  E           \n#>  4 DEU      QGDP      TOT     PC_CHGPY Q         1961-10-01 1.03  E           \n#>  5 DEU      QGDP      TOT     PC_CHGPY Q         1962-01-01 1.03  E           \n#>  6 DEU      QGDP      TOT     PC_CHGPY Q         1962-04-01 1.05  E           \n#>  7 DEU      QGDP      TOT     PC_CHGPY Q         1962-07-01 1.05  E           \n#>  8 DEU      QGDP      TOT     PC_CHGPY Q         1962-10-01 1.05  E           \n#>  9 DEU      QGDP      TOT     PC_CHGPY Q         1963-01-01 0.996 E           \n#> 10 DEU      QGDP      TOT     PC_CHGPY Q         1963-04-01 1.03  E           \n#> # ... with 25,974 more rows\neurostat::search_eurostat(\"birth\")\n#> # A tibble: 275 x 8\n#>    title   code  type  `last update of~ `last table str~ `data start` `data end`\n#>    <chr>   <chr> <chr> <chr>            <chr>            <chr>        <chr>     \n#>  1 Live b~ demo~ data~ 30.06.2021       23.02.2021       1990         2019      \n#>  2 Live b~ demo~ data~ 01.07.2021       01.07.2021       2013         2019      \n#>  3 Live b~ demo~ data~ 30.06.2021       23.02.2021       1990         2019      \n#>  4 Popula~ cens~ data~ 26.08.2015       08.02.2021       2011         2011      \n#>  5 Popula~ cens~ data~ 26.08.2015       08.02.2021       2011         2011      \n#>  6 Popula~ cens~ data~ 26.08.2015       08.02.2021       2011         2011      \n#>  7 Popula~ cens~ data~ 26.08.2015       08.02.2021       2011         2011      \n#>  8 Popula~ cens~ data~ 26.08.2015       08.02.2021       2011         2011      \n#>  9 Popula~ lfst~ data~ 10.09.2021       27.04.2021       1999         2020      \n#> 10 Activi~ lfst~ data~ 10.09.2021       27.04.2021       1999         2020      \n#> # ... with 265 more rows, and 1 more variable: values <chr>\nlivebirth_eu_df <- eurostat::get_eurostat(\"demo_r_fagec\")\nlivebirth_eu_df %>% \n  filter(str_length(geo) != 2) %>% \n  filter(age != \"TOTAL\" & time == \"2019-01-01\") %>% \n  filter(!(age %in% c(\"UNK\", \"Y_GE45\", \"Y_GE48\", \"Y_GE50\", \"Y_LT16\"))) %>% \n  group_by(age) %>% \n  summarise(values = sum(values))\n#> # A tibble: 36 x 2\n#>    age    values\n#>    <chr>   <dbl>\n#>  1 Y10-14   5337\n#>  2 Y15     13440\n#>  3 Y16     30049\n#>  4 Y17     60282\n#>  5 Y18    106563\n#>  6 Y19    172655\n#>  7 Y20    244849\n#>  8 Y21    308539\n#>  9 Y22    378984\n#> 10 Y23    450972\n#> # ... with 26 more rows\nx <- c(100, 107, 105, 110)\nchain_index(x)\n#> Error in chain_index(x): could not find function \"chain_index\"\nchain_index <- function(x) {\n  scales::percent(x/lag(x)-1, accuracy = .01)\n}"},{"path":"seminar2.html","id":"pivot-longerwider","chapter":"4 Markdown & Tidyverse","heading":"4.4 Pivot longer/wider","text":"ggplot(data, mapping) + geom","code":"\nfertility_df %>% \n  select(geo = LOCATION, time = TIME, fertility = Value) %>% \n  pivot_wider(names_from = \"geo\", values_from = \"fertility\") %>% \n  mutate_at(-1, chain_index) %>% \n  pivot_longer(-1, names_to = \"geo\", values_to = \"fertility\")\n#> # A tibble: 3,294 x 3\n#>     time geo   fertility\n#>    <dbl> <chr> <chr>    \n#>  1  1960 AUS   <NA>     \n#>  2  1960 AUT   <NA>     \n#>  3  1960 BEL   <NA>     \n#>  4  1960 CAN   <NA>     \n#>  5  1960 CZE   <NA>     \n#>  6  1960 DNK   <NA>     \n#>  7  1960 FIN   <NA>     \n#>  8  1960 FRA   <NA>     \n#>  9  1960 DEU   <NA>     \n#> 10  1960 GRC   <NA>     \n#> # ... with 3,284 more rows\nfertility_df %>% \n  select(geo = LOCATION, time = TIME, fertility = Value) %>% \n  arrange(time) %>% \n  group_by(geo) %>% \n  group_modify(~ mutate(.x, fertility_growth = chain_index(fertility)), .keep = F)\n#> # A tibble: 3,193 x 4\n#> # Groups:   geo [54]\n#>    geo    time fertility fertility_growth\n#>    <chr> <dbl>     <dbl> <chr>           \n#>  1 ARG    1960      3.11 <NA>            \n#>  2 ARG    1961      3.1  -0.32%          \n#>  3 ARG    1962      3.09 -0.32%          \n#>  4 ARG    1963      3.08 -0.32%          \n#>  5 ARG    1964      3.07 -0.32%          \n#>  6 ARG    1965      3.06 -0.33%          \n#>  7 ARG    1966      3.05 -0.33%          \n#>  8 ARG    1967      3.05 0.00%           \n#>  9 ARG    1968      3.05 0.00%           \n#> 10 ARG    1969      3.06 0.33%           \n#> # ... with 3,183 more rows\ndf_to_plot <- fertility_df %>% \n  filter(TIME == 2018) %>% \n  select(geo = LOCATION, fertility = Value)\nggplot(data = df_to_plot, mapping = aes(x = fertility, y = geo)) + \n  geom_col()\ndf_to_plot2 <-fertility_df %>% \n  filter(TIME ==2018) %>% \n  select(geo = LOCATION, fertility = Value) %>% \n  mutate(continent = countrycode::countrycode(sourcevar = geo, origin  = \"iso3c\",\n                                              destination = \"continent\"),\n         geo = fct_reorder(geo, fertility)) %>%\n  filter(continent == \"Europe\")\nggplot(data = df_to_plot2, mapping = aes(x = fertility, y = geo)) + \n  geom_col()\nfertility_df %>% \n  filter(TIME ==2018) %>% \n  select(geo = LOCATION, fertility = Value) %>% \n  mutate(continent = countrycode::countrycode(sourcevar = geo, origin  = \"iso3c\",\n                                              destination = \"continent\"),\n         geo = fct_reorder(geo, fertility)) %>%\n  filter(continent == \"Europe\") %>% \n  ggplot(mapping = aes(x = fertility, y = geo)) + \n  geom_col(fill = \"green\", color = \"black\")"}]
